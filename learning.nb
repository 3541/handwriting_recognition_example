(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    203987,       4192]
NotebookOptionsPosition[    199787,       4112]
NotebookOutlinePosition[    200129,       4127]
CellTagsIndexPosition[    200086,       4124]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"charset", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"ToUpperCase", "[", 
     RowBox[{"Alphabet", "[", "]"}], "]"}], ",", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "9"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"wdir", "=", 
  RowBox[{"NotebookDirectory", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"importDirectory", "[", "d_", "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dir", "=", 
      RowBox[{"wdir", "<>", "\"\<data/org/\>\"", "<>", 
       RowBox[{"ToString", "[", "d", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"File", "[", "#", "]"}], "\[Rule]", "d"}], "&"}], ",", 
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*.png\>\"", ",", "dir"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.732487645099659*^9, 3.732487713259508*^9}, {
   3.73248775050889*^9, 3.7324877657156467`*^9}, {3.732487887451211*^9, 
   3.732487976166357*^9}, {3.732488159875513*^9, 3.732488161634288*^9}, {
   3.73248988190867*^9, 3.732489903462092*^9}, {3.7324899616835546`*^9, 
   3.732490010853306*^9}, {3.7324922485928707`*^9, 3.732492251951769*^9}, {
   3.732492340560857*^9, 3.732492355086698*^9}, 3.732492428330962*^9, {
   3.7324931101070433`*^9, 3.732493113794841*^9}, {3.7325003859913797`*^9, 
   3.732500422958234*^9}, {3.732500464814878*^9, 3.732500480018272*^9}, {
   3.7325123108631306`*^9, 3.7325123148297796`*^9}, {3.7325180122788124`*^9, 
   3.7325180285367765`*^9}, {3.7325235319667373`*^9, 3.732523538278623*^9}, {
   3.7325236202777214`*^9, 3.7325236224209433`*^9}, {3.732523776657866*^9, 
   3.732523784733858*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"91bc5a58-30cb-4f39-9255-d72f4bceeeaa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A\"\>", ",", "\<\"B\"\>", ",", "\<\"C\"\>", ",", "\<\"D\"\>", 
   ",", "\<\"E\"\>", ",", "\<\"F\"\>", ",", "\<\"G\"\>", ",", "\<\"H\"\>", 
   ",", "\<\"I\"\>", ",", "\<\"J\"\>", ",", "\<\"K\"\>", ",", "\<\"L\"\>", 
   ",", "\<\"M\"\>", ",", "\<\"N\"\>", ",", "\<\"O\"\>", ",", "\<\"P\"\>", 
   ",", "\<\"Q\"\>", ",", "\<\"R\"\>", ",", "\<\"S\"\>", ",", "\<\"T\"\>", 
   ",", "\<\"U\"\>", ",", "\<\"V\"\>", ",", "\<\"W\"\>", ",", "\<\"X\"\>", 
   ",", "\<\"Y\"\>", ",", "\<\"Z\"\>", ",", "0", ",", "1", ",", "2", ",", "3",
    ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7325124192942567`*^9, 3.7325166900122695`*^9, 3.7325170501441402`*^9, {
   3.732518017286993*^9, 3.7325180293771577`*^9}, 3.7325195641705523`*^9, 
   3.7325235386966577`*^9, 3.7325236231207266`*^9, {3.732523779047863*^9, 
   3.7325237850274105`*^9}, 3.73252584785509*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"347c2e01-b8ee-4a7c-b977-378646efc30d"],

Cell[BoxData["\<\"C:\\\\Users\\\\Alex\\\\school\\\\wolfram\\\\project\\\\\"\>\
"], "Output",
 CellChangeTimes->{
  3.7325124192942567`*^9, 3.7325166900122695`*^9, 3.7325170501441402`*^9, {
   3.732518017286993*^9, 3.7325180293771577`*^9}, 3.7325195641705523`*^9, 
   3.7325235386966577`*^9, 3.7325236231207266`*^9, {3.732523779047863*^9, 
   3.7325237850274105`*^9}, 3.7325258478771267`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"d3890725-e0cd-4d06-88bd-38175e71c899"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataFiles", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"importDirectory", "/@", "charset"}], "//", "Flatten"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.732487109958704*^9, 3.7324871904587*^9}, {
   3.732487230107382*^9, 3.7324873486573772`*^9}, {3.7324873925655737`*^9, 
   3.732487479640627*^9}, {3.732487576311911*^9, 3.732487587942734*^9}, {
   3.7324877185983973`*^9, 3.7324877467125998`*^9}, 3.732487841796522*^9, {
   3.7324880684657307`*^9, 3.732488069819475*^9}, {3.7324917326174507`*^9, 
   3.732491745668601*^9}, {3.732500381095523*^9, 3.732500384250478*^9}, {
   3.732500970337088*^9, 3.7325009710260963`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"5ce3bdc1-c5e2-4c9d-aaa6-383c5db54937"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataFiles", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7325009956398087`*^9, 3.732500997731784*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"d303c737-fb71-45c1-a308-9f91bc19b3e6"],

Cell[BoxData["731668"], "Output",
 CellChangeTimes->{
  3.7325009979131737`*^9, 3.7325124706342983`*^9, 3.732516751996147*^9, 
   3.732517335725587*^9, 3.7325181221219325`*^9, 3.7325237230577836`*^9, {
   3.732525832097689*^9, 3.73252584274956*^9}, 3.732525939035197*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"b1bc9c74-97d9-4ae0-884e-3f11e41abf2f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"dataFiles", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Length", "[", "dataFiles", "]"}], ")"}], "/", "2"}], "-", 
       "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.732488358829114*^9, 3.732488428974154*^9}, {
  3.732491757944489*^9, 3.73249176199669*^9}, {3.732492522758051*^9, 
  3.7324925233704453`*^9}, {3.732493625450694*^9, 3.732493625934108*^9}, {
  3.732493712761294*^9, 3.7324937140410357`*^9}, {3.732498884479032*^9, 
  3.732498903442301*^9}, {3.732501060150978*^9, 3.732501064316135*^9}, {
  3.732501100962706*^9, 3.732501139781733*^9}, {3.732525953004388*^9, 
  3.7325259608805423`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"aea31854-22d9-4fa0-ac17-0f6b4df314d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"validationData", "=", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"dataFiles", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Length", "[", "dataFiles", "]"}], ")"}], "/", "2"}], "-", 
       "1"}]}], "]"}], "\[LeftDoubleBracket]", "2", 
    "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.732492526621172*^9, 3.732492539837164*^9}, {
   3.7324933457231083`*^9, 3.732493475373743*^9}, {3.732493627592417*^9, 
   3.7324936278057327`*^9}, {3.732493715634988*^9, 3.732493715913175*^9}, 
   3.7324988269019547`*^9, {3.732498893576727*^9, 3.732498911088407*^9}, {
   3.732501066739051*^9, 3.732501069636924*^9}, {3.7325011420869417`*^9, 
   3.732501145818632*^9}, {3.7325259709118958`*^9, 3.7325259710885973`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"e49287fd-5d1b-4b2c-aaab-c697c5e0e69f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{"#", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"validationData", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.732525799527547*^9, 3.732525819498288*^9}, {
  3.732525978692424*^9, 3.732526028099614*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"cb0b0301-0d62-408c-b428-8c8a0ba039e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1D1KxEAYgOFBG0uv4C1sLW1XPMAuxsUmQlYQO2+uEWyEzTjDzo/uPg8k
TEKK4f3CXG2eV49nIYTdxXxbrV9vpmn9dnc5P9yPu6ftODzcji/DdpiuN+fz
y/fv62v9AQAAAAAAAAAAAAAAAAAAAAD8W+Gn3ts5LWGf3ps6FXvj69/GUnz9
24j0N4La4vGNoKqU+PpXkhjfCCrRv6Os+PoXlFte/7LihfWv7de8+teT0lb/
StLPFiMobim+/m2kx1/6uPGGj0xWUv2Ly+qpf3H6d5TbU/yysvr7+Ytz+PSl
f0e5PfUv6/D4+h8iPab4lejfV0pS8euJV10qL35Bkcj6NyB+d+J3J353yv8R
mgMAAAAAAAAAAAAAAAAAAAAAcBw+AcoR2Ls=
      "], {{0, 128}, {128, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{128, 128},
    PlotRange->{{0, 128}, {0, 128}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1EFKw0AUgOFBNy69grdw69JtiwdoMRY3EVJB3HlzjaDQEtA0M5NH2++D
hElWj5/H3KxfFk8XKaXtVf9arN7uum71vrzuPx7a7fOmbR7v29dm03S368v+
58fP833+BAAAAAAAAAAAAAAAAAAAAACgtPQrepDjk98t7Sg11ZnI75b2FZzt
HOSn0z9Hfj39M+XUSwM1JjxtOQH1L0L/WJMz6l/KtJLilzKhv+Uv66CY4tcw
Pqn4NYzcastfz5i2+ld1aP/5Jzxt/663/rX9UdjlM5thZ/HnNKyt/8z0j6V/
OPFj6R9O/1j6x9I/lv6BxI+lfyzxY4kfS/9ALh8AAAAAAAAAAAAAAAAAAAAA
ACDHFwYrqAg=
      "], {{0, 128}, {128, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{128, 128},
    PlotRange->{{0, 128}, {0, 128}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt07FOg2AYhlGii6O34F24OrrWeAFtxMYFE2pi3LxzxaSTrbTwf/RL8ZwE
Ak2H9nnhZvW6eL6oqmpz1Z0Wy/e7tl1+PFx3N4/N5mXd1E/3zVu9rtvb1WX3
4ef2+Ln+AgAAAAAAAAAAAAAAAAAAADgf1SHZP3C2Dpa3whQGZbdCrJL4JihR
Xl7/EiOSmiBKSUYTFAoJaILRQrrpP05gNP1HCCzmFRgnsJUJxtF/Hnb7m+CU
9M+lfy790+mfS/9c+ufSP5f+ufRPJH4u/ROJn2g3vv6nJH4iD3+UvSV7kh7/
Tf7S33yo7H9zZmLj6z+I+FmUzxXe3wSDTNG/ZwXr/DJd/yMX+efKS+pfKKSe
+IX2FtMNAAAAAAAAAAAAAAAAAAAAAGbsGyL0ucw=
      "], {{0, 128}, {128, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{128, 128},
    PlotRange->{{0, 128}, {0, 128}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1bFKA0EQgOFDG0tfwbewtbRVfADFGGwiREHsfHONYHeXc29nzoXl+yAh
SbEM/yyXi4eXm6eTYRhezw5vN/fvV/v9/cft+eHL3e71ebvbPF7v3jbbzf7y
4fTw4+fv6+fzFwAAAAAAAAAAAAAAAAAAqYZZrafr1nx2W1jJouz656qLbwVx
kfK2EFRdVf+g+H3Wv1rKY0T/OvHyk0elz9mlrPKTpyXO2avE+OPTsobs2Hr9
sybsW+6N1X+pleLrX2il+PoXWumfV/9CKcXErxYsNi4v/iLp/XPH6151t8mb
r/9SFd2OlRe/Qkm9meDiB2X1/8+Ze5LS/z8H7oz+bZU09PxZT3lA/ddQF9AK
skTqWUFcMJ0VBMW76R+R0s0KqunfUGI0K6igf1v6tzKM5B6YMmTHcvunb7N7
icXGR+n/p5Rik+XFLxGMdqy8+IWquymfoqLeTHnxlyoJOB9c/IjJhuXBlQ+q
SC1+IuWb07w55ZvTGQAAAAAAAAAAAAAAAAAAaOIbObK1wg==
      "], {{0, 128}, {128, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{128, 128},
    PlotRange->{{0, 128}, {0, 128}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt071Kw2AYhuGgi6On4Fm4OrpWPIAWY3GJkAri5pnXCA5CJeb7Sd6WXhek
tJ2S+/lys3ldPV80TbO7Gj5W6/e7vl9/PFwPPx673cu2a5/uu7d22/a3m8vh
z8+f6/v7HgAAAAAAAAAAAAAAAAAAgFPQ/BJ9L+eoORB9R2fkML7+i/kzvgkW
o38s/WPpH2ukvwkWoH8s/WON9zfB3PQPJ36g6effHHP4t783Ylap/Q1RV3Z/
K1RR2N8Ehcr7W6GE/rFq9bdCnrr9TZBK/1jV+5sgyRz9TZAkKaYJqkvNqH9d
GQ31r6Wkof5VlDTUv1DhGda/UEn/wu3Y5x7g8fL6T6d/oLyA4leR0XBKef0n
mh4zVfSTnQDxY+kfS/9Y4odTPpz+4cSPpfkx0PwIyQ4AAAAAAAAAAAAAAAAA
AMzhC/AxDFA=
      "], {{0, 128}, {128, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{128, 128},
    PlotRange->{{0, 128}, {0, 128}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1U1Kw1AUgNGHThy6BXfhtEOnFRfQYlqcREgFcebONYJCS+zf69Ur5hxI
SAKBy/fCy9X8cbo4K6WsLvrTdPY86brZy+1lf3PXrh6WbXN/0z41y6a7np/3
D18/j4/rNwAAAAAAAAAAAAAAAAAAAAAAgO3Kl+xBxqisyZ5ljMqm7HFGR/9c
+ufSP1EZyJ5oXPTPpX8u8XPpn0v/XIf0H/4jrFSI3VW/zW4JAm1Lure8/iEO
7Kz/D9E/V0Vk/WNVfN6WIErdxmIXilIRf/jWL8z5X50eX/9qdSX1D1GdUfwQ
+ufSP5f+uaoz6h8iJL7+Jzo2oP659M+lfy7x/wL9AQAAAAAAAAAAAAAAAAAA
AAB2ewckVJ8R
      "], {{0, 128}, {128, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{128, 128},
    PlotRange->{{0, 128}, {0, 128}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1M9KQkEUwOFLbVr2Cr1F25ZtjR5AyaSNgQbRrjcvoxbB/ePoPXPHpu8D
Q6V7OPxm8GrxPHs8a5pme7H7M5u/3mw287e7y92H+/X2abVePtyuX5ar5eZ6
cb778v3n9fX+AwAAAAAAAAAAAAAAAAAAAKBezS+ld/lHmh6l9/oX+uI7gtyG
yzuCfBLL6x/uoPL6hzuivyMIcVx5/UMkRtY/h/Tr3XcQ5Xb/89Ljf/9z34OT
L16D9PJ7H59g2/qMid9+PPe2NRl58zuHZF24MuPjt4fk27YyIfHbczJtW5mo
+O1RObatTFT5zmmxq9YnNn7nwMBt65M7vv4DwnPpny78l6dvZtTCNZksvv6d
9C9L/LLCQ+mfzuUvK7aV+AeJzdU3Tf8+0/SP3bkmIbkGrr34w8YXE3+MMdGG
y4uf4ohue7OLn+7QdOLHSgwoez6JbZXPRPyyxC9O+bKUPwWanwjlAQAAAAAA
AAAAAAAAAAAAYAKfoCSO6Q==
      "], {{0, 128}, {128, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{128, 128},
    PlotRange->{{0, 128}, {0, 128}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1bFKw1AYhuGDXRy9Be+ia0fXihfQYiwuEVJB3LxzjdClQ2waTvpBfR5I
OMl0eM9Pcr99W7/clFL2t/1tvflYdd3m8/Guf3hq96+7tnl+aN+bXdMtt4v+
5dfh+l1/AwAAAAAAAAAAAAAAAAAAAFydciy9nX+kDEjv68oNZXcEFzAmvv5z
GFle/+rOKi9+ReeWF78i8YMmxNe/lmnx9a9F/6y/CzuFWU0efkdQhf5x+seN
jKz/fE6GFT9L/CDxs/QPEj/IbzdoKL7+FyB+kPhZ+geJHyR+lvhBhj9L+SDx
s/QP8tkPUj5L/CDDnyV+kOHPEj9I/Dj94/QHAAAAAAAAAAAAAAAAAACAWf0A
gcjVvg==
      "], {{0, 128}, {128, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{128, 128},
    PlotRange->{{0, 128}, {0, 128}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1bFKw1AUgOGgi6Ov4Fu4OrpWfIAWY3GJkAri5ptrhbrZ0xuS4wH9PkhI
Ml3+c7m52jyvHs+6rttd7G+r9evNOK7f7i73L/fD7mk79A+3w0u/7cfrzfn+
4/vh+nr+AAAAAAAAAAAAAAAAAAAAAAAAmKf7Vr2Q/6U7rnppf1xQ3giytcQ3
giTt8fXPoH+hSfH1X1zcWf9U8Q63/7NNja9/hh/bil9I/EJOnirHyuufKs4u
fqqW+EaQp72/ESxuUnwjWJz+teLO+v+COKwRlNO/lv6FnD9V4l8z2cRPcrJh
sPP1n+NkQ+WTxCXj7PrPFJRsLC/+HO2Rlc8gey3Za8kOAAAAAAAAAAAAAAAA
AAAAAJDqE45oX0M=
      "], {{0, 128}, {128, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{128, 128},
    PlotRange->{{0, 128}, {0, 128}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1bFKw0AAx+HDLo6+gm/RtaNrxQdoaSxdIqSCuPnmmoKDg7RH7PmH8H2Q
kIQMx+8ul/vty/r5ppRyvB1P683bahg27493481Tfzzs+2730L92+25Ybhfj
w4/v43T9CQAAAAAAAAAAAAAAAAAAAFxP+SE9lvkrFdJjnKea8vo3Uh/fLLSg
f5b+WRP6m4JrqUytfyOV61z/Rio3Gf0b0T9L/6DK+L++mRrznEzunxrwzFj8
QTafrJr+F6eGyS72F7+p8/3Pfxf8nfhZymeJn6V8lvhZsmeJn6V/lv5Z4mfp
n6V/lv5Bfr5Z+mfpn6V/lv5Z+mfpn6V/lvhZ+mfpn6V/lv5x+gMAAAAAAAAA
AAAAAAAAAP/gCyDEZy0=
      "], {{0, 128}, {128, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{128, 128},
    PlotRange->{{0, 128}, {0, 128}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.732525805206374*^9, 3.7325258197698464`*^9}, {
  3.7325259757265244`*^9, 3.732525983709396*^9}, {3.7325260158370714`*^9, 
  3.732526029097893*^9}},
 CellLabel->"Out[93]=",ExpressionUUID->"9e15d890-fa2c-460a-9335-dcc644f2e8f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simpleUntrained", "=", 
  RowBox[{"NetInitialize", "[", "\[IndentingNewLine]", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LinearLayer", "[", "108", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "LogisticSigmoid", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "36", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "LogisticSigmoid", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}], ",", 
         RowBox[{"\"\<ColorSpace\>\"", "\[Rule]", "\"\<Grayscale\>\""}]}], 
        "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", "charset"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7324819432425013`*^9, 3.7324820809655647`*^9}, {
  3.732482115361701*^9, 3.7324821155069036`*^9}, {3.732482237744615*^9, 
  3.732482239784336*^9}, {3.732482287331217*^9, 3.7324823787983932`*^9}, {
  3.732488125108939*^9, 3.732488134107473*^9}, {3.732488252186627*^9, 
  3.73248825598564*^9}, {3.732490278988909*^9, 3.732490280151032*^9}, {
  3.732490490761367*^9, 3.732490491196803*^9}, {3.732491177726639*^9, 
  3.7324911827970257`*^9}, {3.732492299542617*^9, 3.732492324935067*^9}, {
  3.7324989333509197`*^9, 3.732498968678815*^9}, {3.73249926645756*^9, 
  3.73249926715024*^9}, {3.732501171845092*^9, 3.732501188545888*^9}, {
  3.732512505199402*^9, 3.732512514926594*^9}, {3.7325237447870464`*^9, 
  3.7325237496476116`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"e0e216b1-92c1-48f5-a45e-bd1f0f190b37"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{108, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{108}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {108}, "$OutputSize" -> 108, 
                    "$InputSize" -> 784, "$InputDimensions" -> {1, 28, 28}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{108}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {108}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{108}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{108}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{36, 108}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{36}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {36}, "$OutputSize" -> 36, 
                    "$InputSize" -> 108, "$InputDimensions" -> {108}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{108}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {36}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {
                    "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", 
                    "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", 
                    "W", "X", "Y", "Z", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 
                    "InputDepth" -> 1, "Dimensions" -> 36, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"108\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"108\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7324923254459267`*^9, 3.7324989736467257`*^9, 3.732499269101286*^9, {
   3.7325011788973827`*^9, 3.732501188908901*^9}, {3.732512486724933*^9, 
   3.7325125154469643`*^9}, 3.7325167625081377`*^9, 3.732517351297821*^9, 
   3.7325197867911882`*^9, {3.7325237454641004`*^9, 3.7325237608848*^9}, 
   3.7325239570584683`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"ed812a6d-2f53-4573-983a-b5154317ff62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simpleTrainingResult", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"simpleUntrained", ",", "trainingData", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validationData"}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ7bKn+qzG+deOhROtzoPoE38C1TWBtNmuKTog+kti
QiSIFqh8EwWim5KqG0F0A9eOLhB9jdl3Ioiu0N4Apk/11h0G6/9megREv2K+
ehJE93yxOAVWN4v7Hoi+yTbpIYj2uvhJQgtIvzsiowiiTwuaqILob5ueqYHo
gLpwWxC9OsvTBUTrmV3NA9FliRPLQPQrv3uNIHqHeH4TiL5wnKUbRE9Nmgam
lWKWTQXRqzR+gelLVztddIH0IY4AVxB9h9c4E0TP9DwCpr/MVH9kDFI3OxdM
94VMeAmidbregukpvxcwmgDpGKulYPpY75MXpkA6hdHiJYgGAOpNsn0=
  "],
 CellLabel->"In[39]:=",ExpressionUUID->"65514a95-ed41-4696-9af9-0aad4fefb351"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetTrainResultsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Total training time\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"9.5 min\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total rounds\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["10", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total batches\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["13620", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Batch size\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["256", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Method\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["\"ADAM\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Final round loss\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], 
                StyleBox["2.864015633380519`", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final validation loss\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["2.860355334699719`", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final round error\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"36.7%\"", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final validation error\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"35.4%\"", "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8}}, "Rows" -> {{0.7}}}], 
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Loss evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox[
                 
                 TemplateBox[{"\"Error evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"]}, {
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJw1ynssFAAcB3DCUG3ksWiGKKmdHrOIim8sp3lW90fOmkdrikKovCaP7qKS
Zcg6sjzi8g6X9+POeZVhmGsepyIbsYlet1C5n9/23XeffX97/UMuXN2moKCA
f/nfmwc26nRHTZMNPtpvuioc4kxXk0s/p+W+Fo9Klrvqo2fkX1w8tmEWKCqT
k1MxqiARK8VK5d6Zjlmu8ciqCZmViaMyJz5vaUrunGyk2JRbmLaTZ3ioFp+p
V8ogM/KwHC0tVI8l275E6GtxtOEV8lQ+HCp2r37wICcWYmBF42ubE9nsFSwc
zA8vHCf3FcNorfyE2IwczEe3sFymqUfWKsWd4rgYRw2yoAz+iuNR4epkdgXS
72typLJJudcrUaK6aO39gzxUBUfjZSOtFXJBNdYTmjIqP5Fvv0HjdzN1fSmZ
WYNbzvk6rAGyfi1mo3J5Nj3khVqYcw6qeXWRW+qQZ+BSbNlMThNAjfFZ4iEg
+71FVlr974AysmU9NqQJg0mlZJUGyAIZEm4ReawBgfOnfCUvyPxGRIRPX9fM
Icc0wXC8mXlka3drBsc5u185jWzUAtd0i8TBVPJyC6JwY3gumSxqxZLEihvJ
JWe2IV2wlsXhyB1v2Y4lFcE9WRw5px0d4/VrdrFklQ5M2iFXL5wc3IEnYfq7
OBHksQ706mvvEoaQIURFfGvJlyAyX4j5Nvc/5wPJWiLYKVmVJ90kx4iwNsKy
c/Elz4ggfM7bY+BDduuEZFjA3n+ZLOjE0MT2Q0FsspEYxbo1qfHe5GQxsgzs
I3MukpfFOJs4q93GIrO74NPlvzThQhZ1IWhMtmjuQWZ0o1/nm2f0OXJmNx6k
DLzfcCKvd+Ou9fxDHpMc0AOPp8N+M1v/gz0orOB7HThNtulF1ruEY6Eg5/fC
k1FUF3aSvKMP+8bnIpm2k/Z/Abzzc58=
                    "]]}, {}}, {{
                    Hue[0.59, 0.5, 0.9], 
                    
                    LineBox[{{1362, 0.48337499937156375`}, {
                    2724, 0.47250868054390927`}, {4086, 0.468337997948514}, {
                    5448, 0.4649455623880527}, {6810, 0.4625386141049871}, {
                    8172, 0.4607515348136503}, {9534, 0.4593578149124273}, {
                    10896, 0.458222938522536}, {12258, 0.4572586319771328}, {
                    13620, 0.456419987784125}}]}, {
                    AbsolutePointSize[3.5], 
                    Hue[0.59, 0.5, 0.76], 
                    
                    PointBox[{{1362, 0.48337499937156375`}, {
                    2724, 0.47250868054390927`}, {4086, 0.468337997948514}, {
                    5448, 0.4649455623880527}, {6810, 0.4625386141049871}, {
                    8172, 0.4607515348136503}, {9534, 0.4593578149124273}, {
                    10896, 0.458222938522536}, {12258, 0.4572586319771328}, {
                    13620, 0.456419987784125}}]}}}, ImageSize -> {132, 82}, 
                  Frame -> True, Axes -> None, AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, 
                  PlotRange -> {{0, 13440}, {-0.3999999999999999, 
                    0.6000000000000001}}, 
                  GridLines -> {{1362, 2724, 4086, 5448, 6810, 8172, 9534, 
                    10896, 12258, 13620}, {{-1., 
                    GrayLevel[0.9]}, {0., 
                    GrayLevel[0.9]}, {-0.6989700043360187, 
                    GrayLevel[0.95]}, {-0.5228787452803375, 
                    GrayLevel[0.95]}, {-0.39794000867203755`, 
                    GrayLevel[0.95]}, {-0.30102999566398114`, 
                    GrayLevel[0.95]}, {-0.22184874961635626`, 
                    GrayLevel[0.95]}, {-0.1549019599857432, 
                    GrayLevel[0.95]}, {-0.09691001300805638, 
                    GrayLevel[0.95]}, {-0.04575749056067506, 
                    GrayLevel[0.95]}, {0.30102999566398114`, 
                    GrayLevel[0.95]}, {0.47712125471966244`, 
                    GrayLevel[0.95]}, {0.6020599913279623, 
                    GrayLevel[0.95]}, {0.6989700043360187, 
                    GrayLevel[0.95]}, {0.7781512503836435, 
                    GrayLevel[0.95]}, {0.8450980400142567, 
                    GrayLevel[0.95]}, {0.9030899869919434, 
                    GrayLevel[0.95]}, {0.9542425094393249, 
                    GrayLevel[0.95]}}}, PlotRangePadding -> {0, 
                    Scaled[0.05]}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"], 
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJwtyX0s1AEcBnBad6mjQuSleStHXraEXWHzrBnLOrZjLRrNy40yNLdopBnC
JGQZRd5P3dUi71ednHPeThtZnUrntf5AVlJjyXr5fZ/t2bPPHtvoZIFwh46O
Dv723/4PwuHYPeaju3PV979bRcj1lCRf2/2FcXwWbM7Jc1e5y4w38iC9eao0
/tki44JbaDqlLjVdmmesX4ZagRHPhUUOLceRy0GhLvlzjKsr4fN1IrPtEHmx
CuLgX30LWbOMXWqxz2l2zvkC2aseN/SCYwbZZG0DDnAE/jcLZxhnN6EoKne+
0Y/MbYaYF5HgZUAefQC2w0WN3YCWcZIEqSf8omXZZKNHsPfqtmkpInc9hrBm
X8maGTn8Ce4fy7XaUH9kvN0C182BMKGWPNGKXb3qN+tr5ManGK/5bibyJ19p
g1mjY3CIgBzQDllap8DYlmzegWK9elGEeprxcgccrsdYHR4myzvxyT6y0KSK
XNKFiZ+qPc6B5KhurByPV/MPkt17MNrZNNlnSmbJwDUVWaqmPjDWyPDWxN0/
rZQseQZ9S3GFIp2c8RyzKTYGc7fJ/Bewvhd69JIu2VqO29cqf6dvvGf8TY5s
X/uQyf30K3sxd97tc2YP/eUvUezBLzNsZpzl3oeJ6C3hj1hydR/45pyZIh6Z
pUDx3sTIh2xykgJ169PmvRZkjQLhlQE+RVvvGKMfwaJGIfcOWdKPlHxLNieV
bKREQKxFlXMVOUMJu7oSY74deVGJu8YrUfZOZP4AxmU5Y+Ue5K4B1O7yrq5b
mGJsrcKZJGmYRE4uUEG628LNL5H8TYVXaVJvjogcPgifvKuizSCychDtOuOt
dxPILkOIMJR6lvqRy4dg5e0Y6LqgYbw9BP+lnIp6GTluGIUKLatghjw+jO2Q
fDe3ePLJEbzmhs5YiskNI+DF+Z41qCdzRsGfFLdsndb4/gGjRF6H
                    "]]}, {}}, {{
                    Hue[0.59, 0.5, 0.9], 
                    LineBox[{{1362, 0.526873326426179}, {
                    2724, 0.4766424342265757}, {4086, 0.4589689206758296}, {
                    5448, 0.44288252193404143`}, {6810, 0.4253525088181017}, {
                    8172, 0.4088069086849333}, {9534, 0.39349828229979533`}, {
                    10896, 0.3794438497148646}, {
                    12258, 0.36608969925178875`}, {
                    13620, 0.35421073325852176`}}]}, {
                    AbsolutePointSize[3.5], 
                    Hue[0.59, 0.5, 0.76], 
                    
                    PointBox[{{1362, 0.526873326426179}, {
                    2724, 0.4766424342265757}, {4086, 0.4589689206758296}, {
                    5448, 0.44288252193404143`}, {6810, 0.4253525088181017}, {
                    8172, 0.4088069086849333}, {9534, 0.39349828229979533`}, {
                    10896, 0.3794438497148646}, {
                    12258, 0.36608969925178875`}, {
                    13620, 0.35421073325852176`}}]}}}, ImageSize -> {132, 82},
                   Frame -> True, Axes -> None, AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRange -> {{0, 13440}, {0, 1.}}, 
                  GridLines -> {{1362, 2724, 4086, 5448, 6810, 8172, 9534, 
                    10896, 12258, 13620}, {{0.2, 
                    GrayLevel[0.9]}, {0.4, 
                    GrayLevel[0.9]}, {0.6, 
                    GrayLevel[0.9]}, {0.8, 
                    GrayLevel[0.9]}, {1., 
                    GrayLevel[0.9]}}}, PlotRangePadding -> {{0, 0}, {
                    Scaled[0.01], 0}}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{1}}, "Rows" -> {{1, 0.1}}}]}}, BaselinePosition -> 
           Automatic, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 1}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetTrainResultsObject[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.732493241572032*^9, 3.73249352919275*^9, 
  3.7324936881035213`*^9, 3.732493780325966*^9, 3.73249918146378*^9, 
  3.732501226679744*^9, 3.7325125266767673`*^9, 3.73251259503348*^9, 
  3.732516685969778*^9, 3.7325167679707108`*^9, 3.732517660461229*^9, 
  3.7325245844708505`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"7cec2549-be48-4b8f-baf0-d5aa3c774f63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simpleTrained", "=", 
  RowBox[{"simpleTrainingResult", "[", "\"\<TrainedNet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.732492626135396*^9, 3.73249266394657*^9}, {
  3.732499281138726*^9, 3.732499284958927*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"2bcbdd72-cd0a-47c4-9aa9-8431fa415c2f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{108, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{108}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {108}, "$OutputSize" -> 108, 
                    "$InputSize" -> 784, "$InputDimensions" -> {1, 28, 28}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{108}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {108}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{108}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{108}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{36, 108}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{36}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {36}, "$OutputSize" -> 36, 
                    "$InputSize" -> 108, "$InputDimensions" -> {108}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{108}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {36}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {
                    "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", 
                    "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", 
                    "W", "X", "Y", "Z", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 
                    "InputDepth" -> 1, "Dimensions" -> 36, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"108\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"108\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.732492650942646*^9, 3.732492664306615*^9}, 
   3.7324928811156282`*^9, 3.732493531488761*^9, 3.732493691076336*^9, 
   3.7324937819678*^9, 3.732499188255713*^9, 3.7325178647050953`*^9, 
   3.7325246470934806`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"708e29fe-9660-406b-a551-27e30962f1aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<simpleTrainedFinal.wlnet\>\""}], ",", "simpleTrained"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.732524654515897*^9, 3.732524670237248*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"e95b1c08-2b8f-4bc0-984b-eef6e3ed158e"],

Cell[BoxData["\<\"C:\\\\Users\\\\Alex\\\\school\\\\wolfram\\\\project\\\\\
simpleTrainedFinal.wlnet\"\>"], "Output",
 CellChangeTimes->{3.732524670959098*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"51ac1c7e-d582-4e18-aecf-7cda18ea66c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simpleMeasuements", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"simpleTrained", ",", "validationData", ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.732492931497089*^9, 3.732492969544886*^9}, {
  3.732493948815974*^9, 3.7324939489589767`*^9}, {3.732499294451253*^9, 
  3.732499302770714*^9}, {3.732524682789485*^9, 3.732524686174864*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"b6ddebbc-1a5f-47f4-affe-f9cd6db483ec"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[
                  
                  RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                   0.4746151541446917}, {0.7191592194171378, 
                   0.5062062867304069, 0.8158644505878024}, {
                   0.47333333333333333`, 0.7727052229508918, 
                   0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                  ImagePadding -> 0.2, 
                  PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                  PlotRangePadding -> Automatic, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Net\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["348431", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[
                  
                  RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                   0.4746151541446917}, {0.7191592194171378, 
                   0.5062062867304069, 0.8158644505878024}, {
                   0.47333333333333333`, 0.7727052229508918, 
                   0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                  ImagePadding -> 0.2, 
                  PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                  PlotRangePadding -> Automatic, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Net\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["348431", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["36", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "0.64578352672408601`7.680874372590176", "\[PlusMinus]", 
                    "0.0008102519559820883`2."}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[
             ClassifierMeasurementsObject, 184665544, 
              Dynamic[Typeset`embedState$$]]], StandardForm]], ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           ClassifierMeasurementsObject, 
            6727464030687530893242182334976729178236210160165218010720, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
          "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
          Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  BoxID -> 6727464030687530893242182334976729178236210160165218010720,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{{3.732492943406402*^9, 3.7324929700962687`*^9}, 
   3.732493535052536*^9, 3.732493693866514*^9, 3.732493788783104*^9, 
   3.732493953499305*^9, {3.73249921218112*^9, 3.732499234968029*^9}, 
   3.7325178885551147`*^9, 3.732524724080765*^9, 3.7325249505084677`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"7a6a73fa-5df9-4d86-97b3-781157ba9def"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simpleMeasuements", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.73249297600557*^9, 3.73249298591255*^9}, {
  3.732493843772319*^9, 3.732493927673894*^9}, {3.7324939598462753`*^9, 
  3.732493963690051*^9}, {3.732499306252391*^9, 3.7324993070590982`*^9}, {
  3.7325250229789853`*^9, 3.732525060713555*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"93458f52-1adf-4dff-954e-bf2d53ab9cdb"],

Cell[BoxData["0.645783526724086`"], "Output",
 CellChangeTimes->{
  3.732492986348274*^9, {3.732493538372418*^9, 3.732493539991153*^9}, 
   3.732493822657338*^9, {3.732493928703314*^9, 3.7324939639828053`*^9}, 
   3.7324992513199253`*^9, 3.7325248984536076`*^9, {3.732525010605072*^9, 
   3.7325250612548466`*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"e24ea790-bbd8-482b-897f-380c9722a5c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simpleMeasuements", "[", "\"\<TopConfusions\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.732493965243245*^9, 3.7324940279718733`*^9}, {
  3.732499309028131*^9, 3.732499309758874*^9}, {3.7325250942763605`*^9, 
  3.732525097816321*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"434802fb-dd14-47a7-a2e1-efa5859d4034"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"L\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"I\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"I\"\>", "\[Rule]", "\<\"L\"\>"}], ",", 
   RowBox[{"\<\"T\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"Z\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"B\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"M\"\>", "\[Rule]", "\<\"N\"\>"}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"Y\"\>", "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7324939740553303`*^9, {3.732494009478615*^9, 3.732494028223362*^9}, {
   3.732525089873949*^9, 3.732525098122699*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"7ee320a4-595e-48bc-bfa8-0b9a9593c07c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convUntrained", "=", 
  RowBox[{"NetInitialize", "[", "\[IndentingNewLine]", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"20", ",", "4"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"40", ",", "9"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"3", ",", "3"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "500", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "36", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}], ",", 
         RowBox[{"\"\<ColorSpace\>\"", "\[Rule]", "\"\<Grayscale\>\""}]}], 
        "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", "charset"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.732499021815322*^9, 3.732499157444347*^9}, {
  3.732501245895878*^9, 3.732501250571951*^9}, {3.7325200621359277`*^9, 
  3.7325200637779436`*^9}, {3.732526125857152*^9, 3.73252612795634*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"720bf21a-0c98-4c53-aa04-4bd85862f3d1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 1, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {25, 25}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 25, 25}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 25, 25}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 25, 25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 25, 25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {25, 25}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 25, 25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{40, 20, 9, 9}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{40}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 40, "KernelSize" -> {9, 9}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 20, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {4, 4}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{40, 4, 4}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {40, 4, 4}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{40, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{40, 4, 4}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {3, 3}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 40, "$InputSize" -> {4, 4}, 
                    "$OutputSize" -> {1, 1}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{40, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{40, 1, 1}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 40}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 40, "$InputDimensions" -> {40, 1, 1}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{40, 1, 1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{36, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{36}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {36}, "$OutputSize" -> 36, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {
                    "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", 
                    "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", 
                    "W", "X", "Y", "Z", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 
                    "InputDepth" -> 1, "Dimensions" -> 36, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"25\"", "\"25\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"25\"", "\"25\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"40\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"40\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"40\"", 
                    "\"1\"", "\"1\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.732499181639983*^9, 3.732501251729351*^9, {3.7325200532032337`*^9, 
   3.7325200642117023`*^9}, {3.732526119958539*^9, 3.732526128487485*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"07383e5f-0ae6-4f1b-9473-3334962e9144"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convTrainingResult", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"convUntrained", ",", "trainingData", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validationData"}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.732499327649925*^9, 3.7324993446979733`*^9}, {
  3.7325201913625484`*^9, 3.7325201955334463`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"e60df194-e6f8-4522-89b1-9788d87aa548"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetTrainResultsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Total training time\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"1.9 min\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total rounds\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["10", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total batches\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["14300", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Batch size\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["256", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Method\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["\"ADAM\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Final round loss\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], 
                StyleBox["0.319231601161219`", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final validation loss\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["0.3654785885980484`", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final round error\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"11.1%\"", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final validation error\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"12.3%\"", "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8}}, "Rows" -> {{0.7}}}], 
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Loss evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox[
                 
                 TemplateBox[{"\"Error evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"]}, {
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJw1zA1MDGAcx/G7rMYQmbG1SCqrkXFotV27n6WXm8ZmSqoleWl0JFkvF+Zl
td4oRqYXrlcVOidXR9F1b3VJOqqTyjUvIXLessJ56/l7tmfPPvs+/79TdNym
XVYcDgd/77938hwLh9r6R1vBWJdg0pJD2OheUT9qd7150iuOo0VctvDVVBXz
7Axsq9aJuAI988fT0E+vypywesD85iyCw9MsopVdzKH50OYoqhzqDcxtF7Hi
Vf+5xCmPmb2KsTwm0dTdSt4swZTI4sQgRTfzjFLY+RSOKkbJmjJ0zvLL7XHr
ZT5cgb2BYzGH48mrryDFqvG8/An5fRU807MdCmc/YS6vwb7UL842v4zMEdew
6vvI67Q46nNrMVq8g1cpI3dIYfPZVezRSlbdwMjcbEeP7X3Ml2QwlhcXDL4h
i29i/HK68063p8whdVgcH/x56SUy7xb883wGkl3ItnJE8/ZzO3rII3IM5Qvr
BUayrh6lWwsDl8zrZy5twP2TMQn8r+SjCoTkeSVFDZPDbiO565rFV0v2vANx
QCdXO0Ge04hUgTBrvIv8oRH6Da4cftIAc3sTKnJyE2Y+JFfexTl+/J6UQfKJ
eyizGBKVnoPMkc0QdSSPG0uoL1DCNzT941o+9WwlXC6sCwzhkSeUsJZu+Z4a
TI5pgWQZ74B81TPmnhakfQtyDrMj+6qg1EiOGGT0X6aCrbTgd5OZ7KhGiX51
bXYN+ZQa07Kyppk9aP6HGgEZRkf7avIeDfzv+bi3VJGNGuxeyzfYmsh+WsQ2
v1045E2u08I64lPamv/zTjoI139pkCrIuTq4LpJL8vVkiw4vr9pzjVdNzLGt
iC0du347hdzXCuFPc9RlDjmgDaoXSQkiN7K8Db0eeUXDZtrnrEddZmdI0UHq
Z/Toe1dTYpgg/9bjUY6LyqubvK8dJ73jrZdyh5j726GQyeZbhVMX3scZ6fMg
Y6Op+Q/RgYra
                    "]]}, {}}, {{
                    Hue[0.59, 0.5, 0.9], 
                    
                    LineBox[{{1430, -0.27784483209011307`}, {
                    2860, -0.34181631372711685`}, {
                    4290, -0.37347677576574173`}, {
                    5720, -0.39989558373301765`}, {
                    7150, -0.41429475506152347`}, {
                    8580, -0.4226545536874307}, {
                    10010, -0.42866397904646764`}, {
                    11440, -0.43246109631888807`}, {
                    12870, -0.4354794731665847}, {
                    14300, -0.4371380609115837}}]}, {
                    AbsolutePointSize[3.5], 
                    Hue[0.59, 0.5, 0.76], 
                    
                    PointBox[{{1430, -0.27784483209011307`}, {
                    2860, -0.34181631372711685`}, {
                    4290, -0.37347677576574173`}, {
                    5720, -0.39989558373301765`}, {
                    7150, -0.41429475506152347`}, {
                    8580, -0.4226545536874307}, {
                    10010, -0.42866397904646764`}, {
                    11440, -0.43246109631888807`}, {
                    12870, -0.4354794731665847}, {
                    14300, -0.4371380609115837}}]}}}, ImageSize -> {132, 82}, 
                  Frame -> True, Axes -> None, AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, 
                  PlotRange -> {{0, 14080}, {-0.6000000000000001, 0.4}}, 
                  GridLines -> {{1430, 2860, 4290, 5720, 7150, 8580, 10010, 
                    11440, 12870, 14300}, {{-1., 
                    GrayLevel[0.9]}, {0., 
                    GrayLevel[0.9]}, {-0.6989700043360187, 
                    GrayLevel[0.95]}, {-0.5228787452803375, 
                    GrayLevel[0.95]}, {-0.39794000867203755`, 
                    GrayLevel[0.95]}, {-0.30102999566398114`, 
                    GrayLevel[0.95]}, {-0.22184874961635626`, 
                    GrayLevel[0.95]}, {-0.1549019599857432, 
                    GrayLevel[0.95]}, {-0.09691001300805638, 
                    GrayLevel[0.95]}, {-0.04575749056067506, 
                    GrayLevel[0.95]}, {0.30102999566398114`, 
                    GrayLevel[0.95]}, {0.47712125471966244`, 
                    GrayLevel[0.95]}, {0.6020599913279623, 
                    GrayLevel[0.95]}, {0.6989700043360187, 
                    GrayLevel[0.95]}, {0.7781512503836435, 
                    GrayLevel[0.95]}, {0.8450980400142567, 
                    GrayLevel[0.95]}, {0.9030899869919434, 
                    GrayLevel[0.95]}, {0.9542425094393249, 
                    GrayLevel[0.95]}}}, PlotRangePadding -> {0, 
                    Scaled[0.05]}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"], 
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJw1zAtMDHAcB/BbWKHSg+g1Sx6RZ8ij1HeR2Gy9rCmEQ4UeI4ssPUyWSiq6
eR2V66pboeelO3Xv7rq2Yh0Zm9jQy02zWkp59P/5bb/99tn3u58LNyHkpAmH
w8Hf/XenJ/0gXspUHMvYz77TLj6P5vu2c8MaDczrMxCflvT+elMns1UWAnIf
mDuk6Jm/5+FtkHDUZp6Oua8Qnvz8PRpBG/MBHgR9ExvqMjXM2ruIW9X9aLhW
zbyVD2epyNTHiry/GLrwWmMQV8VsXoq4a+U9wx+UzKrHGEtcKM4OJKeUISTa
LiV0WMG8qRwJ+5o1aa3koQqM5JcMXk0lC0ToGu+ZHHUlH6pC/ZJjlTu+yJnn
P8FuB2t5eRm54yk6+N/Gi/LJimc4bqFYmxFPfliDyvDVZUfXkC/VYl3/rBzu
XHJYHdLcDF7fqmTMHvVQj43cC24nWzbAbHuvWwmPPNAA62MHMlOSyZpGjGzu
KeFzyaViuPu19E/9d2oTmmx/9N52IEc8h6BoVFw9g+zZDN6WmLOG2WQbCTae
145ye1uZjRJ8tMtapo8ht0tRHOVsGuBNFr7Aa0lFQX4i+UoLrJ51LlcLW5gj
W7GyTvTq4XLKnWWw7xc7mg9QniPDl3jUXuSTf8rwUtQ5FpREjpbDvz/2nP0t
skGOk6cX8V8tJe9UoPp9cEny4AvmGgX0YUMZ3a6UL1aCW3VpKN6KfEMJ47i+
wquD+hNK8LI9ci83kk+pIDf56rVNQn6jwpVoswtOv6TM/mocqYiK8HtEeZ0a
J1aYKB0TyC4a2KiFNjwv8k0N+Hm+IgsP8qQGOSK7NZxd5DNtyOLY+5sb6P/b
NswM3+ORXkwO0OKOT7STxQS5QQu5d6zUtY/sqsO21tKpSQm5QAdjRFT1nELy
bx2+BgbZ1QjJce0QzIgcPPxJwvyuHQuOV3Yb//f36tGW3OWuDZX6/gEgZWLl

                    "]]}, {}}, {{
                    Hue[0.59, 0.5, 0.9], 
                    
                    LineBox[{{1430, 0.17248580636519942`}, {
                    2860, 0.15059603698955534`}, {
                    4290, 0.14114910355271396`}, {
                    5720, 0.13335593016485664`}, {
                    7150, 0.12978326176151414`}, {
                    8580, 0.12706070802797997`}, {
                    10010, 0.12579236974247812`}, {
                    11440, 0.12443382636339533`}, {
                    12870, 0.12393359811717368`}, {
                    14300, 0.12311355181189232`}}]}, {
                    AbsolutePointSize[3.5], 
                    Hue[0.59, 0.5, 0.76], 
                    
                    PointBox[{{1430, 0.17248580636519942`}, {
                    2860, 0.15059603698955534`}, {
                    4290, 0.14114910355271396`}, {
                    5720, 0.13335593016485664`}, {
                    7150, 0.12978326176151414`}, {
                    8580, 0.12706070802797997`}, {
                    10010, 0.12579236974247812`}, {
                    11440, 0.12443382636339533`}, {
                    12870, 0.12393359811717368`}, {
                    14300, 0.12311355181189232`}}]}}}, ImageSize -> {132, 82},
                   Frame -> True, Axes -> None, AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, 
                  PlotRange -> {{0, 14080}, {0, 0.736384297991961}}, 
                  GridLines -> {{1430, 2860, 4290, 5720, 7150, 8580, 10010, 
                    11440, 12870, 14300}, {{0.2, 
                    GrayLevel[0.9]}, {0.4, 
                    GrayLevel[0.9]}, {0.6, 
                    GrayLevel[0.9]}, {0.8, 
                    GrayLevel[0.9]}, {1., 
                    GrayLevel[0.9]}}}, PlotRangePadding -> {{0, 0}, {
                    Scaled[0.01], 0}}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{1}}, "Rows" -> {{1, 0.1}}}]}}, BaselinePosition -> 
           Automatic, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 1}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetTrainResultsObject[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.732500120767433*^9, 3.732501535521295*^9, 
  3.732520180373742*^9, 3.732520497264772*^9, 3.732526316975543*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"1f26111d-b577-42ef-b589-ba369802ef77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convTrained", "=", 
  RowBox[{"convTrainingResult", "[", "\"\<TrainedNet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.732500143038465*^9, 3.7325001601609097`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"1c8b0a44-5132-4c2e-85b1-340eab5b3acf"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 1, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {25, 25}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 25, 25}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 25, 25}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 25, 25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 25, 25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {25, 25}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 25, 25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{40, 20, 9, 9}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{40}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 40, "KernelSize" -> {9, 9}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 20, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {4, 4}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{40, 4, 4}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {40, 4, 4}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{40, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{40, 4, 4}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {3, 3}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 40, "$InputSize" -> {4, 4}, 
                    "$OutputSize" -> {1, 1}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{40, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{40, 1, 1}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 40}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 40, "$InputDimensions" -> {40, 1, 1}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{40, 1, 1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{36, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{36}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {36}, "$OutputSize" -> 36, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {
                    "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", 
                    "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", 
                    "W", "X", "Y", "Z", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 
                    "InputDepth" -> 1, "Dimensions" -> 36, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"25\"", "\"25\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"25\"", "\"25\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"40\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"40\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"40\"", 
                    "\"1\"", "\"1\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.732500160446993*^9, 3.7325205458917227`*^9, 
  3.732526321019449*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"cb51c38f-f73f-4fbd-9af2-27e625d49251"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<convTrainedFinal.wlnet\>\""}], ",", "convTrained"}], "]"}]], "Input",
 CellChangeTimes->{{3.7325205483695498`*^9, 3.7325205874071264`*^9}, {
  3.73252063885061*^9, 3.732520640276391*^9}, {3.732526332605373*^9, 
  3.7325263343337517`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"fe63624e-c216-4525-b119-1dfba0fde131"],

Cell[BoxData["\<\"C:\\\\Users\\\\Alex\\\\school\\\\wolfram\\\\project\\\\\
convTrainedFinal.wlnet\"\>"], "Output",
 CellChangeTimes->{{3.732520567977085*^9, 3.732520588767677*^9}, 
   3.732526334775055*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"dc820bfe-8a43-4252-b432-bd545c48a5ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convMeasurements", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"convTrained", ",", "validationData", ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.732500168190146*^9, 3.732500177571519*^9}, {
  3.732526341978801*^9, 3.73252634720428*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"e5083bef-a220-4d58-ab24-17c27834bef1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[
                  
                  RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                   0.4746151541446917}, {0.7191592194171378, 
                   0.5062062867304069, 0.8158644505878024}, {
                   0.47333333333333333`, 0.7727052229508918, 
                   0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                  ImagePadding -> 0.2, 
                  PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                  PlotRangePadding -> Automatic, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Net\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["365833", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[
                  
                  RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                   0.4746151541446917}, {0.7191592194171378, 
                   0.5062062867304069, 0.8158644505878024}, {
                   0.47333333333333333`, 0.7727052229508918, 
                   0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                  ImagePadding -> 0.2, 
                  PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                  PlotRangePadding -> Automatic, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Net\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["365833", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["36", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "0.8768864481881076811`8.386599941043174", "\[PlusMinus]",
                     "0.000543230022479535`2."}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[
             ClassifierMeasurementsObject, 194095752, 
              Dynamic[Typeset`embedState$$]]], StandardForm]], ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           ClassifierMeasurementsObject, 
            6727464030687530893242182334976729178273103648309349609584, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
          "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
          Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  BoxID -> 6727464030687530893242182334976729178273103648309349609584,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{3.732500220804028*^9, 3.7325206883720293`*^9, 
  3.7325264790892477`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"26ea5904-fd2c-4d51-a9e2-ecaa45833ab0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convMeasurements", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.732500250678903*^9, 3.732500255330443*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"0ae5764c-46be-491c-a780-5d1a6c60c2dd"],

Cell[BoxData["0.8768864481881077`"], "Output",
 CellChangeTimes->{3.732500255689063*^9, 3.732520704616316*^9, 
  3.7325264847659235`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"e1150f1d-636f-4730-ac62-56f984a1b50b"]
}, Open  ]]
},
WindowSize->{1534, 812},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1879, 39, 124, "Input",ExpressionUUID->"91bc5a58-30cb-4f39-9255-d72f4bceeeaa"],
Cell[2462, 63, 1027, 16, 32, "Output",ExpressionUUID->"347c2e01-b8ee-4a7c-b977-378646efc30d"],
Cell[3492, 81, 470, 7, 32, "Output",ExpressionUUID->"d3890725-e0cd-4d06-88bd-38175e71c899"]
}, Open  ]],
Cell[3977, 91, 768, 14, 28, "Input",ExpressionUUID->"5ce3bdc1-c5e2-4c9d-aaa6-383c5db54937"],
Cell[CellGroupData[{
Cell[4770, 109, 210, 3, 28, "Input",ExpressionUUID->"d303c737-fb71-45c1-a308-9f91bc19b3e6"],
Cell[4983, 114, 350, 5, 32, "Output",ExpressionUUID->"b1bc9c74-97d9-4ae0-884e-3f11e41abf2f"]
}, Open  ]],
Cell[5348, 122, 899, 19, 28, "Input",ExpressionUUID->"aea31854-22d9-4fa0-ac17-0f6b4df314d7"],
Cell[6250, 143, 886, 18, 28, "Input",ExpressionUUID->"e49287fd-5d1b-4b2c-aaab-c697c5e0e69f"],
Cell[CellGroupData[{
Cell[7161, 165, 429, 10, 28, "Input",ExpressionUUID->"cb0b0301-0d62-408c-b428-8c8a0ba039e2"],
Cell[7593, 177, 7925, 171, 147, "Output",ExpressionUUID->"9e15d890-fa2c-460a-9335-dcc644f2e8f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15555, 353, 2087, 39, 238, "Input",ExpressionUUID->"e0e216b1-92c1-48f5-a45e-bd1f0f190b37"],
Cell[17645, 394, 26976, 547, 88, "Output",ExpressionUUID->"ed812a6d-2f53-4573-983a-b5154317ff62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44658, 946, 776, 14, 28, "Input",ExpressionUUID->"65514a95-ed41-4696-9af9-0aad4fefb351"],
Cell[45437, 962, 11990, 227, 247, "Output",ExpressionUUID->"7cec2549-be48-4b8f-baf0-d5aa3c774f63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57464, 1194, 318, 5, 28, "Input",ExpressionUUID->"2bcbdd72-cd0a-47c4-9aa9-8431fa415c2f"],
Cell[57785, 1201, 26867, 545, 88, "Output",ExpressionUUID->"708e29fe-9660-406b-a551-27e30962f1aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84689, 1751, 344, 8, 28, "Input",ExpressionUUID->"e95b1c08-2b8f-4bc0-984b-eef6e3ed158e"],
Cell[85036, 1761, 237, 3, 32, "Output",ExpressionUUID->"51ac1c7e-d582-4e18-aecf-7cda18ea66c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85310, 1769, 516, 8, 28, "Input",ExpressionUUID->"b6ddebbc-1a5f-47f4-affe-f9cd6db483ec"],
Cell[85829, 1779, 8819, 176, 90, "Output",ExpressionUUID->"7a6a73fa-5df9-4d86-97b3-781157ba9def"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94685, 1960, 427, 6, 28, "Input",ExpressionUUID->"93458f52-1adf-4dff-954e-bf2d53ab9cdb"],
Cell[95115, 1968, 393, 6, 32, "Output",ExpressionUUID->"e24ea790-bbd8-482b-897f-380c9722a5c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95545, 1979, 337, 5, 28, "Input",ExpressionUUID->"434802fb-dd14-47a7-a2e1-efa5859d4034"],
Cell[95885, 1986, 771, 16, 32, "Output",ExpressionUUID->"7ee320a4-595e-48bc-bfa8-0b9a9593c07c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96693, 2007, 2026, 41, 314, "Input",ExpressionUUID->"720bf21a-0c98-4c53-aa04-4bd85862f3d1"],
Cell[98722, 2050, 38837, 784, 88, "Output",ExpressionUUID->"07383e5f-0ae6-4f1b-9473-3334962e9144"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137596, 2839, 488, 8, 28, "Input",ExpressionUUID->"e60df194-e6f8-4522-89b1-9788d87aa548"],
Cell[138087, 2849, 12264, 241, 214, "Output",ExpressionUUID->"1f26111d-b577-42ef-b589-ba369802ef77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150388, 3095, 268, 4, 28, "Input",ExpressionUUID->"1c8b0a44-5132-4c2e-85b1-340eab5b3acf"],
Cell[150659, 3101, 38761, 783, 88, "Output",ExpressionUUID->"cb51c38f-f73f-4fbd-9af2-27e625d49251"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189457, 3889, 440, 9, 28, "Input",ExpressionUUID->"fe63624e-c216-4525-b119-1dfba0fde131"],
Cell[189900, 3900, 285, 4, 32, "Output",ExpressionUUID->"dc820bfe-8a43-4252-b432-bd545c48a5ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190222, 3909, 419, 8, 28, "Input",ExpressionUUID->"e5083bef-a220-4d58-ab24-17c27834bef1"],
Cell[190644, 3919, 8634, 175, 90, "Output",ExpressionUUID->"26ea5904-fd2c-4d51-a9e2-ecaa45833ab0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199315, 4099, 233, 4, 28, "Input",ExpressionUUID->"0ae5764c-46be-491c-a780-5d1a6c60c2dd"],
Cell[199551, 4105, 220, 4, 32, "Output",ExpressionUUID->"e1150f1d-636f-4730-ac62-56f984a1b50b"]
}, Open  ]]
}
]
*)

